/*
以 # 号开头的是注释
其他每一行都是一个语句
当语句以冒号 ： 结尾时，缩进的语句视为代码块
Python程序对大小写敏感
*/

/*数据类型*/

/*
整数
计算机使用二进制，有时候用十六进制表示整数比较方便，用0x牵制，已经0-9,a-f表示
Python的整数没有大小限制

浮点数
浮点数也就是小数
浮点数也没有大小限制，但是超出一定范围就直接显示inf（无限大）

整数和浮点数在计算机内部存储的方式是不同的，整数永远是精确的（除法也是精确的），而浮点数运算则可能有四舍五入的误差
*/

/*
字符串
字符串用单引号 '' 或者双引号 "" 括起来
如果 ' 本身也是一个字符，用 "" 括起来
如果字符串内部既有 '' 又有 "" ，可以用转义字符 \ 来标识
   'I\'m \"OK\"!'    ---->  I'm OK 

转义字符
\n	表示换行
\t	表示制表符

可以使用 r'' 阻止转义(注意是 r'' 而不是r)
r' I\'m \"OK\"! '			---> 	I\'m \"OK\"!

如果字符串内很多换行，\n 不好阅读，Python允许使用 '''...'''	的格式表示多行内容
>>> print('''line1
...line2
...line3
''')
结果；
line1
line2
line3

*/


/*
布尔值可以用and、or和not运算
and是与运算
or是或运算
not是非运算
布尔值经常用在条件判断中
*/

/*
空值
空值用None表示。
Nome不能理解为0，0是有意义的，None只是一个特殊的空值
*/

/*
变量
在Python中，等号 =  是赋值语句，可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量

常量
在Python中，通常用全部大写的变量名表示常量，这只是一种习惯上的写法

在Python中，有两种除法，一种是 / : / 除法的运算结果是浮点数，即使是两个整数恰好整除，也是浮点数
还有一种是 // ,称为地板除，即使除不尽，结果也是只取整数部分。

还有一个取余运算 % ，得到的是余数。

无论是地板除 // 还是取余数 % ，结果永远是整数，所以整数运算结果永远是精确的。

*/